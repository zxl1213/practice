 //互斥锁---黄牛抢票程序    
  #include <stdio.h>    
  #include <pthread.h>    
  #include <unistd.h>    
  int ticket=100;    
  pthread_mutex_t mutex;    
  //互斥锁变量不一定非要全局变量--只要保证互斥的线程都能访问到就行    
  void *thr_start(void *arg){    
    //加锁在临界资源访问之前    
    pthread_mutex_lock(&mutex);    
    while(1){    
      if(ticket>0){    
        usleep(1000);    
E>      printf("bull --%d-- get a ticket --%d--\n",(int)arg,ticket);    
        ticket--;    
      }else{    
        //加锁之后需要在任意线程可能退出的地方加锁                                                                                          
        pthread_mutex_unlock(&mutex);    
        pthread_exit(NULL);    
      }    
        pthread_mutex_unlock(&mutex);    
    }    
    return NULL;    
  }    
      
  int main(){    
    pthread_t tid[4];    
    int i=0,ret;    
    //初始化互斥锁    
    pthread_mutex_init(&mutex,NULL);    
    for(;i<4;i++){    
W>    ret=pthread_create(&tid[i],NULL,thr_start,(void*)i);    
      if(ret!=0){
        printf("create bull faile\n");
        return -1;
  
      }
    }
    for(i=0;i<4;i++){
      pthread_join(tid[i],NULL);
    }
    pthread_mutex_destroy(&mutex);
    return 0;
  }         
