//类的引入
#include <iostream>      
#include <cstring>      
//#include "student.h"    
using namespace std;    
//class的默认访问权限是private,struct的默认访问权限是public(为了兼容c)    
class Student{    
  public:                                                                                                 
    void StudentSet(const char* name,const char* gender, int age){    
      strcpy(_name,name);        
      strcpy(_gender,gender);    
      _age=age;      
    }                        
    void StudentOutput(){                               
      cout<<_name<<" "<<_gender<<" "<<_age<<endl;    
    }                     
    char _name[20];         
    char _gender[20];    
    int _age;          
};                     
int main() {           
  Student s;                         
  s.StudentSet("李宁","男",18);    
  s.StudentOutput();    
}   
//类的大小,成员变量之和                                                                                   
#include <iostream>    
using namespace std;    
class A1{    
  public:    
    void f1(){    
    }    
  private:    
    int _a;    
};    
class A2{    
  public:    
    void f2(){}    
    
};    
class A3{};    
int main(){    
  cout<<sizeof(A1)<<endl;    
  cout<<sizeof(A2)<<endl;    
  cout<<sizeof(A3)<<endl;    
    
  return 0;    
} 
//this指针
//函数体中成员变量的操作都是通过指针完成的
//
#include <iostream>                                                                                       
using namespace std;
class Date{
  public:
    void Dateset(int year,int month,int day){
      _year=year;
      _month=month;
      _day=day;
    }
    void Display(){
      cout<<_year<<" "<<_month<<" "<<_day<<endl;
    }
    int _year;
    int _month;
    int _day;
};
int main(){
  Date d1,d2;
  d1.Dateset(1996,2,10);
  d2.Dateset(1299,4,6);
  d1.Display();
  d2.Display();
}

//this指针可以为空吗
#include <iostream>                                                                                       
using namespace std;    
class A{    
  public:    
    void printA(){    
      cout<<_a<<endl;    
    }    
    void Show(){    
      cout<<"Show()"<<endl;    
    }    
  private:    
    int _a;    
};    
int main(){    
  A* p=NULL;    
  p->printA();    
  p->Show();    
} 
